import http from 'k6/http';
import { check, sleep } from 'k6';

export const options = {
  vus: <%= vus %>,
  duration: '<%= duration %>',
};

const BASE_URL = __ENV.BASE_URL || 'http://localhost:3000';
const GRAPHQL_ENDPOINT = `${BASE_URL}/graphql`;

export default function () {
<% operations.forEach(operation => { %>
  // Test <%= operation.type %> <%= operation.name %>
  {
    const query = `
      <%= operation.type.toLowerCase() %> <%= operation.name %><% if (operation.arguments.length > 0) { %>(<% operation.arguments.forEach((arg, index) => { %>$<%= arg.name %>: <%= arg.type %><% if (index < operation.arguments.length - 1) { %>, <% } %><% }) %>)<% } %> {
        <%= operation.name %><% if (operation.arguments.length > 0) { %>(<% operation.arguments.forEach((arg, index) => { %><%= arg.name %>: $<%= arg.name %><% if (index < operation.arguments.length - 1) { %>, <% } %><% }) %>)<% } %> {
          # TODO: Add fields to query
          id
        }
      }
    `;

    const variables = {
      <% operation.arguments.forEach((arg, index) => { %>
      <%= arg.name %>: <% if (arg.type.includes('String')) { %>'test-value'<% } else if (arg.type.includes('Int') || arg.type.includes('Float')) { %>123<% } else if (arg.type.includes('Boolean')) { %>true<% } else { %>{ /* TODO: Add test data */ }<% } %><% if (index < operation.arguments.length - 1) { %>,<% } %>
      <% }) %>
    };

    const payload = JSON.stringify({
      query: query,
      <% if (operation.arguments.length > 0) { %>variables: variables<% } %>
    });

    const params = {
      headers: { 'Content-Type': 'application/json' },
    };

    const response = http.post(GRAPHQL_ENDPOINT, payload, params);
    
    check(response, {
      '<%= operation.name %> status is 200': (r) => r.status === 200,
      '<%= operation.name %> has no errors': (r) => {
        const body = JSON.parse(r.body);
        return !body.errors;
      },
      '<%= operation.name %> response time < 500ms': (r) => r.timings.duration < 500,
    });
    
    sleep(1);
  }

<% }) %>
}